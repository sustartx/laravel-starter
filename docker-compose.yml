# For more information: https://laravel.com/docs/sail
version: '3'
services:
#    NGinX:
#        image: nginx:alpine
#        container_name: my-nginx
#        working_dir: /app
#        volumes:
#            - ./app:/app
#            - ./docker/nginx/conf/nginx.conf:/etc/nginx/conf/nginx.conf:ro
#            - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
#        ports:
#            - "8090:80"
    App:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        container_name: App
        image: laravel-octane:latest
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
#            - '${APP_PORT:-80}:80'
#            - '${APP_PORT:-9000}:9000'
            - '9000:9000'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
#            - '.:/var/www'
            - './app:/var/www/app'
            - './bootstrap:/var/www/bootstrap'
            - './config:/var/www/config'
            - './database:/var/www/database'
            - './public:/var/www/public'
            - './resources:/var/www/resources'
            - './routes:/var/www/routes'
            - './storage:/var/www/storage'
            - './tests:/var/www/tests'
            - './vendor:/var/www/vendor'
            - './.env:/var/www/.env'
            - './package.json:/var/www/package.json'
            - './yarn.lock:/var/www/yarn.lock'
        networks:
            - swoole
        depends_on:
            - MySQL
            - Redis_Default
            - Redis_Cache
            - Redis_Session
            - Redis_Queue
    PostgreSQL:
        image: postgres:14.1-bullseye
        container_name: PostgreSQL
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
        volumes:
            - PostgreSQL:/var/lib/postgresql/data/
        ports:
#            - "${FORWARD_DB_PORT:-5432}:5432"
            - "5432:5432"
        networks:
            - swoole
    MySQL:
        image: 'mysql/mysql-server:8.0'
        container_name: "MySQL"
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
#            - '${FORWARD_DB_PORT:-3306}:3306'
            - '3307:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'MySQL:/var/lib/mysql'
        networks:
            - swoole
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
    Redis_Default:
        image: 'redis:alpine'
        container_name: Redis_Default
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
#            - '${REDIS_DEFAULT_PORT:-6379}:6379'
            - '6370:6379'
        # command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        volumes:
            - 'Redis_Default:/data'
        networks:
            - swoole
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s
    Redis_Cache:
        image: 'redis:alpine'
        container_name: Redis_Cache
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
#            - '${REDIS_CACHE_PORT:-6379}:6379'
            - '6371:6379'
        # command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        volumes:
            - 'Redis_Cache:/data'
        networks:
            - swoole
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
    Redis_Session:
        image: 'redis:alpine'
        container_name: Redis_Session
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
#            - '${REDIS_SESSION_PORT:-6379}:6379'
            - '6372:6379'
        # command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        volumes:
            - 'Redis_Session:/data'
        networks:
            - swoole
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
    Redis_Queue:
        image: 'redis:alpine'
        container_name: Redis_Queue
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
#            - '${REDIS_QUEUE_PORT:-6379}:6379'
            - '6373:6379'
        # command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        volumes:
            - 'Redis_Queue:/data'
        networks:
            - swoole
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

volumes:
    PostgreSQL:
        driver: local
    MySQL:
        driver: local
    Redis_Default:
        driver: local
    Redis_Cache:
        driver: local
    Redis_Session:
        driver: local
    Redis_Queue:
        driver: local
